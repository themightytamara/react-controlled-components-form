{"ast":null,"code":"var _jsxFileName = \"/Users/tamara/react-controlled-components-form/src/Components/containers/FormContainer.js\";\nimport React, { Component } from 'react';\n/* Import Components */\n\nimport CheckBox from '../CheckBox';\nimport Input from '../Input';\nimport TextArea from '../TextArea';\nimport Select from '../Select';\nimport Button from '../Button';\n\nclass FormContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: {\n        name: '',\n        age: '',\n        gender: '',\n        skills: [],\n        about: ''\n      },\n      genderOptions: ['Male', 'Female', 'Others'],\n      skillOptions: ['Programming', 'Development', 'Design', 'Testing']\n    };\n    this.handleTextArea = this.handleTextArea.bind(this);\n    this.handleAge = this.handleAge.bind(this);\n    this.handleFullName = this.handleFullName.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleCheckBox = this.handleCheckBox.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n  /* This lifecycle hook gets executed when the component mounts */\n\n\n  handleFullName(e) {\n    let value = e.target.value;\n    this.setState(prevState => ({\n      newUser: { ...prevState.newUser,\n        name: value\n      }\n    }), () => console.log(this.state.newUser));\n  }\n\n  handleAge(e) {\n    let value = e.target.value;\n    this.setState(prevState => ({\n      newUser: { ...prevState.newUser,\n        age: value\n      }\n    }), () => console.log(this.state.newUser));\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(prevState => ({\n      newUser: { ...prevState.newUser,\n        [name]: value\n      }\n    }), () => console.log(this.state.newUser));\n  }\n\n  handleTextArea(e) {\n    console.log(\"Inside handleTextArea\");\n    let value = e.target.value;\n    this.setState(prevState => ({\n      newUser: { ...prevState.newUser,\n        about: value\n      }\n    }), () => console.log(this.state.newUser));\n  }\n\n  handleCheckBox(e) {\n    const newSelection = e.target.value;\n    let newSelectionArray;\n\n    if (this.state.newUser.skills.indexOf(newSelection) > -1) {\n      newSelectionArray = this.state.newUser.skills.filter(s => s !== newSelection);\n    } else {\n      newSelectionArray = [...this.state.newUser.skills, newSelection];\n    }\n\n    this.setState(prevState => ({\n      newUser: { ...prevState.newUser,\n        skills: newSelectionArray\n      }\n    }));\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let userData = this.state.newUser;\n    fetch('http://example.com', {\n      method: \"POST\",\n      body: JSON.stringify(userData),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      response.json().then(data => {\n        console.log(\"Successful\" + data);\n      });\n    });\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      newUser: {\n        name: '',\n        age: '',\n        gender: '',\n        occupation: [],\n        about: ''\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"container-fluid\",\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      inputType: 'text',\n      title: 'Username: ',\n      name: 'name',\n      value: this.state.newUser.name,\n      placeholder: 'Enter your username',\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Input, {\n      inputType: 'number',\n      name: 'age',\n      title: 'Age: ',\n      value: this.state.newUser.age,\n      placeholder: 'Enter your age',\n      handleChange: this.handleAge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Select, {\n      title: 'Gender: ',\n      name: 'gender',\n      options: this.state.genderOptions,\n      value: this.state.newUser.gender,\n      placeholder: 'Gender',\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }), \" \", /*#__PURE__*/React.createElement(TextArea, {\n      title: 'Occupation:',\n      rows: 10,\n      value: this.state.newUser.about,\n      name: 'currentPetInfo',\n      handleChange: this.handleTextArea,\n      placeholder: 'Describe your occupation here.',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      action: this.handleFormSubmit,\n      type: 'primary',\n      title: 'Submit',\n      style: buttonStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Button, {\n      action: this.handleClearForm,\n      type: 'secondary',\n      title: 'Clear',\n      style: buttonStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }), \" \");\n  }\n\n}\n\nconst buttonStyle = {\n  margin: '10px 10px 10px 10px'\n};\nexport default FormContainer;","map":{"version":3,"sources":["/Users/tamara/react-controlled-components-form/src/Components/containers/FormContainer.js"],"names":["React","Component","CheckBox","Input","TextArea","Select","Button","FormContainer","constructor","props","state","newUser","name","age","gender","skills","about","genderOptions","skillOptions","handleTextArea","bind","handleAge","handleFullName","handleFormSubmit","handleClearForm","handleCheckBox","handleInput","e","value","target","setState","prevState","console","log","newSelection","newSelectionArray","indexOf","filter","s","preventDefault","userData","fetch","method","body","JSON","stringify","headers","then","response","json","data","occupation","render","buttonStyle","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA;;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AACpCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,EADC;AAEPC,QAAAA,GAAG,EAAE,EAFE;AAGPC,QAAAA,MAAM,EAAE,EAHD;AAIPC,QAAAA,MAAM,EAAE,EAJD;AAKPC,QAAAA,KAAK,EAAE;AALA,OADE;AAUXC,MAAAA,aAAa,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,CAVJ;AAWXC,MAAAA,YAAY,EAAE,CAAC,aAAD,EAAgB,aAAhB,EAA+B,QAA/B,EAAyC,SAAzC;AAXH,KAAb;AAcA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKG,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBH,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKI,eAAL,GAAuB,KAAKA,eAAL,CAAqBJ,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKK,cAAL,GAAsB,KAAKA,cAAL,CAAoBL,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKM,WAAL,GAAmB,KAAKA,WAAL,CAAiBN,IAAjB,CAAsB,IAAtB,CAAnB;AACD;AAED;;;AAEAE,EAAAA,cAAc,CAACK,CAAD,EAAI;AACjB,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AACA,SAAKE,QAAL,CAAeC,SAAS,KAAK;AAAEpB,MAAAA,OAAO,EACjC,EAAC,GAAGoB,SAAS,CAACpB,OAAd;AAAuBC,QAAAA,IAAI,EAAEgB;AAA7B;AADwB,KAAL,CAAxB,EAGO,MAAMI,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWC,OAAvB,CAHb;AAIA;;AAEDU,EAAAA,SAAS,CAACM,CAAD,EAAI;AACR,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AACJ,SAAKE,QAAL,CAAeC,SAAS,KAAK;AAAEpB,MAAAA,OAAO,EACjC,EAAC,GAAGoB,SAAS,CAACpB,OAAd;AAAuBE,QAAAA,GAAG,EAAEe;AAA5B;AADwB,KAAL,CAAxB,EAGO,MAAMI,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWC,OAAvB,CAHb;AAIA;;AAEDe,EAAAA,WAAW,CAACC,CAAD,EAAI;AACV,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AACA,QAAIhB,IAAI,GAAGe,CAAC,CAACE,MAAF,CAASjB,IAApB;AACJ,SAAKkB,QAAL,CAAeC,SAAS,KAAK;AAAEpB,MAAAA,OAAO,EACjC,EAAC,GAAGoB,SAAS,CAACpB,OAAd;AAAuB,SAACC,IAAD,GAAQgB;AAA/B;AADwB,KAAL,CAAxB,EAGO,MAAMI,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWC,OAAvB,CAHb;AAIA;;AAEDQ,EAAAA,cAAc,CAACQ,CAAD,EAAI;AAChBK,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,QAAIL,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AACA,SAAKE,QAAL,CAAcC,SAAS,KAAK;AAC1BpB,MAAAA,OAAO,EAAE,EACP,GAAGoB,SAAS,CAACpB,OADN;AACeK,QAAAA,KAAK,EAAEY;AADtB;AADiB,KAAL,CAAvB,EAIM,MAAII,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWC,OAAvB,CAJV;AAKD;;AAGDc,EAAAA,cAAc,CAACE,CAAD,EAAI;AAEhB,UAAMO,YAAY,GAAGP,CAAC,CAACE,MAAF,CAASD,KAA9B;AACA,QAAIO,iBAAJ;;AAEA,QAAG,KAAKzB,KAAL,CAAWC,OAAX,CAAmBI,MAAnB,CAA0BqB,OAA1B,CAAkCF,YAAlC,IAAkD,CAAC,CAAtD,EAAyD;AACvDC,MAAAA,iBAAiB,GAAG,KAAKzB,KAAL,CAAWC,OAAX,CAAmBI,MAAnB,CAA0BsB,MAA1B,CAAiCC,CAAC,IAAIA,CAAC,KAAKJ,YAA5C,CAApB;AACD,KAFD,MAEO;AACLC,MAAAA,iBAAiB,GAAG,CAAC,GAAG,KAAKzB,KAAL,CAAWC,OAAX,CAAmBI,MAAvB,EAA+BmB,YAA/B,CAApB;AACD;;AAEC,SAAKJ,QAAL,CAAeC,SAAS,KAAK;AAAEpB,MAAAA,OAAO,EACpC,EAAC,GAAGoB,SAAS,CAACpB,OAAd;AAAuBI,QAAAA,MAAM,EAAEoB;AAA/B;AAD2B,KAAL,CAAxB;AAIL;;AAECZ,EAAAA,gBAAgB,CAACI,CAAD,EAAI;AAClBA,IAAAA,CAAC,CAACY,cAAF;AACA,QAAIC,QAAQ,GAAG,KAAK9B,KAAL,CAAWC,OAA1B;AAEA8B,IAAAA,KAAK,CAAC,oBAAD,EAAsB;AACvBC,MAAAA,MAAM,EAAE,MADe;AAEvBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAFiB;AAGvBM,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT;AAHc,KAAtB,CAAL,CAOKC,IAPL,CAOUC,QAAQ,IAAI;AAClBA,MAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBG,IAAI,IAAG;AAC1BlB,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAeiB,IAA3B;AACD,OAFD;AAGH,KAXD;AAYD;;AAED1B,EAAAA,eAAe,CAACG,CAAD,EAAI;AAEfA,IAAAA,CAAC,CAACY,cAAF;AACA,SAAKT,QAAL,CAAc;AACZnB,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,EADC;AAEPC,QAAAA,GAAG,EAAE,EAFE;AAGPC,QAAAA,MAAM,EAAE,EAHD;AAIPqC,QAAAA,UAAU,EAAE,EAJL;AAKPnC,QAAAA,KAAK,EAAE;AALA;AADG,KAAd;AASH;;AAEDoC,EAAAA,MAAM,GAAG;AACP,wBAEI;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAkC,MAAA,QAAQ,EAAE,KAAK7B,gBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE,MAAlB;AACO,MAAA,KAAK,EAAG,YADf;AAEO,MAAA,IAAI,EAAG,MAFd;AAGO,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,OAAX,CAAmBC,IAHjC;AAIO,MAAA,WAAW,EAAI,qBAJtB;AAKO,MAAA,YAAY,EAAI,KAAKc,WAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,oBAWE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE,QAAlB;AACM,MAAA,IAAI,EAAE,KADZ;AAEO,MAAA,KAAK,EAAG,OAFf;AAGO,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,OAAX,CAAmBE,GAHjC;AAIM,MAAA,WAAW,EAAI,gBAJrB;AAKO,MAAA,YAAY,EAAE,KAAKQ,SAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,oBAmBE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,UAAf;AACQ,MAAA,IAAI,EAAE,QADd;AAEQ,MAAA,OAAO,EAAI,KAAKX,KAAL,CAAWO,aAF9B;AAGQ,MAAA,KAAK,EAAI,KAAKP,KAAL,CAAWC,OAAX,CAAmBG,MAHpC;AAIQ,MAAA,WAAW,EAAI,QAJvB;AAKQ,MAAA,YAAY,EAAI,KAAKY,WAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,oBAgCE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE,aADT;AAEE,MAAA,IAAI,EAAE,EAFR;AAGE,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,OAAX,CAAmBK,KAH5B;AAIE,MAAA,IAAI,EAAE,gBAJR;AAKE,MAAA,YAAY,EAAE,KAAKG,cALrB;AAME,MAAA,WAAW,EAAE,gCANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCF,eAwCE,oBAAC,MAAD;AACI,MAAA,MAAM,EAAI,KAAKI,gBADnB;AAEI,MAAA,IAAI,EAAI,SAFZ;AAGI,MAAA,KAAK,EAAI,QAHb;AAIE,MAAA,KAAK,EAAE8B,WAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCF,oBA+CE,oBAAC,MAAD;AACE,MAAA,MAAM,EAAI,KAAK7B,eADjB;AAEE,MAAA,IAAI,EAAI,WAFV;AAGE,MAAA,KAAK,EAAI,OAHX;AAIE,MAAA,KAAK,EAAE6B,WAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/CF,MAFJ;AA2DD;;AA9KmC;;AAiLtC,MAAMA,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAG;AADS,CAApB;AAIA,eAAe/C,aAAf","sourcesContent":["import React, {Component} from 'react';  \n\n/* Import Components */\nimport CheckBox from '../CheckBox';  \nimport Input from '../Input';  \nimport TextArea from '../TextArea';  \nimport Select from '../Select';\nimport Button from '../Button'\n\nclass FormContainer extends Component {  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newUser: {\n        name: '',\n        age: '',\n        gender: '',\n        skills: [],\n        about: ''\n\n      },\n\n      genderOptions: ['Male', 'Female', 'Others'],\n      skillOptions: ['Programming', 'Development', 'Design', 'Testing']\n\n    }\n    this.handleTextArea = this.handleTextArea.bind(this);\n    this.handleAge = this.handleAge.bind(this);\n    this.handleFullName = this.handleFullName.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleCheckBox = this.handleCheckBox.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  /* This lifecycle hook gets executed when the component mounts */\n  \n  handleFullName(e) {\n   let value = e.target.value;\n   this.setState( prevState => ({ newUser : \n        {...prevState.newUser, name: value\n        }\n      }), () => console.log(this.state.newUser))\n  }\n\n  handleAge(e) {\n       let value = e.target.value;\n   this.setState( prevState => ({ newUser : \n        {...prevState.newUser, age: value\n        }\n      }), () => console.log(this.state.newUser))\n  }\n\n  handleInput(e) {\n       let value = e.target.value;\n       let name = e.target.name;\n   this.setState( prevState => ({ newUser : \n        {...prevState.newUser, [name]: value\n        }\n      }), () => console.log(this.state.newUser))\n  }\n\n  handleTextArea(e) {\n    console.log(\"Inside handleTextArea\");\n    let value = e.target.value;\n    this.setState(prevState => ({\n      newUser: {\n        ...prevState.newUser, about: value\n      }\n      }), ()=>console.log(this.state.newUser))\n  }\n\n\n  handleCheckBox(e) {\n\n    const newSelection = e.target.value;\n    let newSelectionArray;\n\n    if(this.state.newUser.skills.indexOf(newSelection) > -1) {\n      newSelectionArray = this.state.newUser.skills.filter(s => s !== newSelection)\n    } else {\n      newSelectionArray = [...this.state.newUser.skills, newSelection];\n    }\n\n      this.setState( prevState => ({ newUser:\n        {...prevState.newUser, skills: newSelectionArray }\n      })\n      )\n}\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let userData = this.state.newUser;\n\n    fetch('http://example.com',{\n        method: \"POST\",\n        body: JSON.stringify(userData),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n      }).then(response => {\n        response.json().then(data =>{\n          console.log(\"Successful\" + data);\n        })\n    })\n  }   \n\n  handleClearForm(e) {\n  \n      e.preventDefault();\n      this.setState({ \n        newUser: {\n          name: '',\n          age: '',\n          gender: '',\n          occupation: [],\n          about: ''\n        },\n      })\n  }\n\n  render() {\n    return (\n    \n        <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n       \n            <Input inputType={'text'}\n                   title= {'Username: '} \n                   name= {'name'}\n                   value={this.state.newUser.name} \n                   placeholder = {'Enter your username'}\n                   handleChange = {this.handleInput}\n                   \n                   /> {/* Name of the user */}\n        \n          <Input inputType={'number'} \n                name={'age'}\n                 title= {'Age: '} \n                 value={this.state.newUser.age} \n                placeholder = {'Enter your age'}\n                 handleChange={this.handleAge} /> {/* Age */} \n\n\n          <Select title={'Gender: '}\n                  name={'gender'}\n                  options = {this.state.genderOptions} \n                  value = {this.state.newUser.gender}\n                  placeholder = {'Gender'}\n                  handleChange = {this.handleInput}\n                  /> {/* Age Selection */}\n          {/* <CheckBox  title={'Skills'}\n                  name={'skills'}\n                  options={this.state.skillOptions}\n                  selectedOptions = { this.state.newUser.skills}\n                  handleChange={this.handleCheckBox}\n                   /> Skill */}\n          <TextArea\n            title={'Occupation:'}\n            rows={10}\n            value={this.state.newUser.about}\n            name={'currentPetInfo'}\n            handleChange={this.handleTextArea}\n            placeholder={'Describe your occupation here.'} />{/* About you */}\n\n          <Button \n              action = {this.handleFormSubmit}\n              type = {'primary'} \n              title = {'Submit'} \n            style={buttonStyle}\n          /> { /*Submit */ }\n          \n          <Button \n            action = {this.handleClearForm}\n            type = {'secondary'}\n            title = {'Clear'}\n            style={buttonStyle}\n          /> {/* Clear the form */}\n          \n        </form>\n  \n    );\n  }\n}\n\nconst buttonStyle = {\n  margin : '10px 10px 10px 10px'\n}\n\nexport default FormContainer;"]},"metadata":{},"sourceType":"module"}